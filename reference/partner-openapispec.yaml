openapi: "3.0.0"
info:
  version: 0.0.13
  title: PAPI Partner API
  description: API for partners

security:
  - PartnerAuth: [ ]
    APIAuth: [ ]

tags:
  - name: artifact
    description: Artifact creation and retrieval. This covers Invoices and Trust Deposits.
  - name: webhook
    description: Webhook management


paths:
  /api/v3/partner/{party_id}/artifacts/{artifact_id}:
    parameters:
      - in: path
        name: party_id
        required: true
        schema:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
            name: uuid
      - in: path
        name: artifact_id
        required: true
        schema:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
            name: uuid
    get:
      summary: Get an artifact by id
      description: Get an artifact by id. The artifact id is independent of the type, the returned artifact may be an invoice, trust deposit, ...
      tags:
        - artifact
      operationId: getArtifactById

      responses:
        '200':
          description: Found artifact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactResponse'
        '400':
          description: Bad request
        '404':
          description: Requested artifact not found
        '500':
          description: Error processing

  /api/v3/partner/{party_id}/artifacts/invoices:
    parameters:
      - in: path
        name: party_id
        required: true
        schema:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
            name: uuid
    post:
      summary: Create an Invoice
      description: Create an invoice for a channel partner
      operationId: createInvoice
      tags:
        - artifact
      requestBody:
        description: Invoice details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
            example:
              firm_id: 7f623e2d-270d-8ad8-2e13-b7bfd022703e
              external_id: e69f9433-885b-4321-bb48-9f5084850893
              amount: "123.45"
              settlement_account: Office
              external_reference: inv-123
              currency: AUD
              due_date: '1953-07-23T13:56:24.084Z'
              surcharge_choice_override: Customer
              description: Charge for case setup
              matter: {
                         external_id: my-unique-external-id,
                         external_reference: my-external-reference,
                         description: 'The matter of Frank vs Herman ',
                         type: court
                      }
              debtor: {
                  external_id: case-client-1234,
                  name: Frank,
                  email: frank@email.com,
                  contact_number: '1300234567'
              }

              line_items: [
                {
                    amount: '100',
                    name: Phone call,
                    description: Listened to voice message,
                    quantity: 1,
                    tax_rate: "10",
                }, {
                    amount: '1000',
                    name: Phone call,
                    description: Replied to voice mail,
                    quantity: 1,
                    tax_rate: "15"
                }
              ]
              notes: [
                'Got to know client',
                'Created initial case file'
              ]
              payment_methods_override: [
                'Card'
              ]
      responses:
        '200':
          description: Created Invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceResponse'
              example:
                payment_uri: http://localhost:8080/pay/d3010d67-06d3-46bf-be6a-b894ec743c96
                invoice: {
                  amount: '59825067.564974666',
                  artifact_id: d3010d67-06d3-46bf-be6a-b894ec743c96,
                  artifact_type: Invoice,
                  created_at: '2022-07-13T04:09:45.716804Z',
                  invoice_reference: inv-123
                }
  /api/v3/partner/{party_id}/artifacts/deposits:
    parameters:
      - in: path
        name: party_id
        required: true
        schema:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
            name: uuid
    post:
      summary: Create a Trust Deposit
      description: Create a trust deposit for a channel partner
      operationId: createTrustDeposit
      tags:
        - artifact
      requestBody:
        description: Anticipated trust deposit details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
            example:
              firm_id: 7f623e2d-270d-8ad8-2e13-b7bfd022703e
              external_id: e69f9433-885b-4321-bb48-9f5084850893
              amount: "123.45"
              settlement_account: Office
              external_reference: inv-123
              currency: AUD
              due_date: '1953-07-23T13:56:24.084Z'
              surcharge_choice_override: Customer
              description: Charge for case setup
              matter: {
                external_id: my-unique-external-id,
                external_reference: my-external-reference,
                description: 'The matter of Frank vs Herman',
                type: court
              }
              debtor: {
                external_id: case-client-1234,
                name: Frank,
                email: frank@email.com,
                contact_number: '1300234567'
              }

              line_items: [
                {
                  amount: '100',
                  name: Phone call,
                  description: Listened to voice message,
                  quantity: 1,
                  tax_rate: "10",
                }, {
                  amount: '1000',
                  name: Phone call,
                  description: Replied to voice mail,
                  quantity: 1,
                  tax_rate: "15"
                }
              ]
              notes: [
                'Got to know client',
                'Created initial case file'
              ]
              payment_methods_override: [
                'Card'
              ]
      responses:
        '200':
          description: Created Trust Deposit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositResponse'
              example:
                payment_uri: http://localhost:8080/pay/d3010d67-06d3-46bf-be6a-b894ec743c96
                anticipated_trust_deposit: {
                  amount: '59825067.564974666',
                  artifact_id: d3010d67-06d3-46bf-be6a-b894ec743c96,
                  artifact_type: AnticipatedTrustDeposit,
                  created_at: '2022-07-13T04:09:45.716804Z',
                  deposit_reference: inv-123
                }


  /api/v3/partner/{party_id}/webhooks:
    parameters:
      - in: path
        name: party_id
        required: true
        schema:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
            name: uuid


    get:
      summary: Get list of webhooks for the partner
      description: Get list of webhooks for the partner
      operationId: getWebhooks
      tags:
        - webhook
      responses:
        '200':
          description: List of webhooks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookList'
              example:
                webhooks:  [
                  {
                    name: mywebhook,
                    party_id: 732c73fc-1778-4acd-b334-20a2f49c2766,
                    description: Testing my webhook,
                    url: 'https://to.me',
                    status: Enabled,
                    events: [
                      'artifact.invoice.created',
                      'payment.card.successful',
                      'payout.disbursed'
                    ],
                    authentication: {
                      type: 'bearer_token, basic_auth',
                      data: {
                        username: me,
                        password: password
                      },
                      add_position: 'header, body'
                    }
                  }
                ]

        '500':
          description: Error processing
          content:
            application/jsopn:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Create a webhook
      description: Create a webhook
      operationId: createWebhook
      tags:
        - webhook
      requestBody:
        description: Webhook details. webhook_id must not be supplied. If it is, the POST will be considered a BadRequest
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
            examples:
              bearer_token:
                value:
                  {
                    party_id: 732c73fc-1778-4acd-b334-20a2f49c2766,
                    name: mywebhook,
                    description: Testing my webhook,
                    url: https://to.me,
                    status: Enabled,
                    authentication: {
                      type: bearer_token,
                      data: {
                        token: abcdef12345,
                      },
                      add_position: header
                    },
                    events: [
                      'artifact.invoice.created',
                      'payment.card.successful',
                      'payout.disbursed'
                    ]
                  }

              basic_auth:
                value:
                  {
                    party_id: 732c73fc-1778-4acd-b334-20a2f49c2766,
                    name: mywebhook,
                    description: Testing my webhook,
                    url: https://to.me,
                    status: Enabled,
                    authentication: {
                      type: basic_auth,
                      data: {
                        username: myusername,
                        password: password123
                      },
                      add_position: header
                    },
                    events: [
                      'artifact.invoice.created',
                      'payment.card.successful',
                      'payout.disbursed'
                    ]
                  }


      responses:
        '200':
          description: Created Webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse' # NB - the details with the webhook_id
              example:
                webhook: {
                  name: mywebhook,
                  party_id: 732c73fc-1778-4acd-b334-20a2f49c2766,
                  description: Testing my webhook,
                  events: [
                    'artifact.invoice.created',
                    'payment.card.successful',
                    'payout.disbursed'
                  ],
                  status: Enabled,
                  url: https://to.me,
                  webhook_id: 65b3faf7-1156-4849-bc05-89e10d0bbacd,
                  authentication: {
                    add_position: 'header, body',
                    data: {
                      password: password,
                      username: me
                    },
                    type: 'bearer_token, basic_auth'
                  },
                }
        '409':
          description: A webhook already exists for the partyId with the same url and events.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

        '500':
          description: Error processing
          content:
            application/jsopn:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update a webhook
      description: Update a webhook
      operationId: updateWebhook
      tags:
        - webhook
      requestBody:
        description: Webhook details.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
      responses:
        '200':
          description: Webhook updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse' # NB - the details with the webhook_id
        '404':
          description: The specified webhook (by webhook_id) not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: The update causes a conflict with an existing webhook (same partyId, url and events).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /api/v3/partner/{party_id}/webhooks/{webhook_id}:
    parameters:
      - in: path
        name: party_id
        required: true
        schema:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
            name: uuid
      - in: path
        name: webhook_id
        required: true
        schema:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
            name: uuid
    delete:
      summary: Delete a webhook
      description: Delete a webhook by id
      operationId: deleteWebhook
      tags:
        - webhook
      responses:
        '204':
          description: Deleted Webhook
        '500':
          description: Error processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v3/partner/events/topics:
    get:
      summary: Get a list of event topics for the channel partner
      description: |
        All currently available event topics for the channel partner are returned.         
        The channel partner is derived from the PartnerAuth security context
      operationId: getChannelPartnerEventTopics
      tags:
        - webhook
      responses:
        '200':
          description: List of currently available event topics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTopics'
              example:
                eventTopics: [
                  'artifact.invoice.created',
                  'artifact.trust-deposit.created'
                ]

        '500':
          description: Error processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v3/partner/events:
    get:
      summary: Get a list of events for the channel partner
      description: |
        Returns events for the channel partner matching the filter criteria.        
        The filters supplied in the query params must *all* be met.        
        The channel partner is derived from the PartnerAuth security context.
      operationId: getChannelPartnerWebhookEvents
      tags:
        - webhook
      parameters:
        - in: query
          name: topic
          schema:
            type: string
          example: payout.disbursed
          required: false
        - in: query
          name: since_webhook_event_id
          schema:
            type: string
            format: uuid
            x-go-type: uuid.UUID
            x-go-type-import:
              path: github.com/gofrs/uuid
              name: uuid
          description: |
            If supplied, all events since this webhook event was sent, are retrieved. The retrieved events are subject to the 
            other filter params (topic, status).  
            NB - 'since_webhook_event_id' and 'since' are mutually exclusive. Supplying both results in a BadRequest error.
          required: false
        - in: query
          name: since
          description: |
            Return events sent since this timestamp. If not supplied, events for the last 24 hours are returned.  
            NB - 'since_webhook_event_id' and 'since' are mutually exclusive. Supplying both results in a BadRequest error.
          schema:
            type: string
            format: date-time
          required: false
          example: "2022-07-29T15:33:00"
        - in: query
          name: status
          description: Webhook send status
          schema:
            $ref: '#/components/schemas/WebhookSendStatus'
          required: false

      responses:
        '200':
          description: List of matching events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
              example:
                events: [
                  {
                    "webhook_event_id": "96d5e476-35d1-4209-a672-d179e0b5111c",
                    "externalId": "bd7fc497-8ad3-4a1f-9a07-7d364e7ab011",
                    "topic": "payout.disbursed",
                    "status": "sent",
                    "sent_at": "2022-07-28T05:39:32.029314Z",
                    "payload": {
                        "topic": "payout.disbursed",
                        "object": {
                          "payments": [
                            { "currency": "AUD", "artifact_id": "e9c42bc6-b7b3-4e24-a416-eda2a8c5cae2", "card_scheme": "MASTERCARD", "submit_time": "2022-07-26T04:54:20Z", "payment_type": "card", "total_amount": "3363.51", "artifact_type": "ArtifactInvoice", "payment_reference": "qp.14f4c4207", "card_number_partial": "1555", "customer_surcharge_amount": "61.09", "merchant_surcharge_amount": "0" }
                          ],
                          "branch_code": "063-074",
                          "account_type": "Office",
                          "account_number": "10069576",
                          "disbursed_amount": "3302.42",
                          "disbursement_date": "2022-07-26T22:28:45.918809Z",
                          "disbursement_reference": "qp.14f4c4207",
                          "batch_disbursement_reference": "rp.af27f7727"
                        },
                        "event_id": "612d6c74-78e8-4c69-915b-cc05d92e5372",
                        "party_id": "ca838b5d-8064-4910-aa54-bce2e6e81fbc",
                        "created_at": "2022-07-27T04:02:26.662446Z",
                        "channel_partner_id": "5ca1ab1e-cafe-4000-a000-deadbeefdead"
                    },
                  },
                ]

        '500':
          description: Error processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    PartnerAuth:
      type: apiKey
      in: header
      name: X-CHANNEL-PARTNER-ID
    APIAuth:
      type: apiKey
      in: header
      name: X-API-KEY

  schemas:
    Artifact:
      type: object
      properties:
        artifact_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
            name: uuid
        artifact_type:
          type: string
          enum:
            - Unknown
            - Invoice
            - AnticipatedTrustDeposit
            - MatterStatement
            - ClientStatement
            - PaymentLink
            - PaymentRequest
            - Subscription
            - Fee
            - Refund
          description: The type of the artifact
        channel_partner_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
            name: uuid
        producer_party_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
            name: uuid
        internal_matter_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
            name: uuid
        external_id:
          type: string
        name:
          type: string
        description:
          type: string
        amount:
          type: string
          format: decimal
          x-go-type: decimal.Decimal
          x-go-type-import:
            path: github.com/shopspring/decimal
        status:
          type: string
          enum:
            - Draft
            - Submitted
            - Authorised
            - Voided

      required:
        - artifact_id
        - artifact_type
        - name
        - amount
        - status



    ArtifactResponse:
      type: object
      properties:
        artifact:
          $ref: "#/components/schemas/Artifact"
      required:
        - artifact
      example: {
        "artifact": {
          "artifact_id": "6585fbc0-7d62-47ad-a528-17119bf8a57f",
          "name": "INV-46",
          "artifact_type": "Invoice",
          "amount": "1500",
          "external_id": "INV-46",
          "channel_partner_id": "6585fbc0-7d62-47ad-a528-17119bf8a57f",
          "internal_matter_id": "c1b157ef-56c7-459b-a36c-a814c09c1c72",
          "producer_party_id": "facade00-0000-4000-a000-000000000000",
          "status": "Submitted"
        }
      }

    PaymentRequest:
      type: object
      properties:
        firm_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
            name: uuid
        matter:
          $ref: "#/components/schemas/Matter"
        debtor:
          $ref: "#/components/schemas/Debtor"
        external_id:
          type: string
          description: This is the id supplied by the user of the API and can be used for filtering invoices. This should be unique for a partyId but this is not enforced.
          example: e69f9433-885b-4321-bb48-9f5084850893
        external_reference:
          type: string
          description: This is a reference supplied by the user of the API and can be used for filtering invoices.
          example: inv-123
        amount:
          type: string
          format: decimal
          x-go-type: decimal.Decimal
          x-go-type-import:
            path: github.com/shopspring/decimal
        currency:
          $ref: "#/components/schemas/Currency"
        due_date:
          type: string
          format: date-time
        settlement_account:
          $ref: "#/components/schemas/AccountType"
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
        notes:
          type: array
          items:
            type: string
        payment_methods_override:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
        surcharge_choice_override:
          $ref: '#/components/schemas/SurchargeChoice'
        description:
          type: string
          description: Freeform text for API user.
      required:
        - firm_id  # Struct implies optional, code seems to require it. TODO - check if it should be required or not
        - external_id
        - amount
        - settlement_account


    DepositResponse:
      type: object
      properties:
        anticipated_trust_deposit:
          $ref: '#/components/schemas/Deposit'
        payment_uri:
          type: string
      required:
        - anticipated_trust_deposit
        - payment_uri

    Deposit:
      type: object
      properties:
        artifact_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
            name: uuid
        artifact_type:
          $ref: "#/components/schemas/ArtifactType"
        deposit_reference: # // TODO if this was just reference (not deposit_reference) Invoice and Deposit would be the same
          type: string
        amount:
          type: string
          format: decimal
          x-go-type: decimal.Decimal
          x-go-type-import:
            path: github.com/shopspring/decimal
        created_at:
          type: string
          format: date-time
      required:
        - artifact_id
        - artifact_type
        - deposit_reference
        - amount
        - created_at

    InvoiceResponse:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/Invoice'
        payment_uri:
          type: string
      required:
        - invoice
        - payment_uri

    Invoice:
      type: object
      properties:
        artifact_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
            name: uuid
        artifact_type:
          $ref: "#/components/schemas/ArtifactType"
        invoice_reference:
          type: string
        amount:
          type: string
          format: decimal
          x-go-type: decimal.Decimal
          x-go-type-import:
            path: github.com/shopspring/decimal
        created_at:
          type: string
          format: date-time
      required:
        - artifact_id
        - artifact_type
        - invoice_reference
        - amount
        - created_at

    InvoiceLineItem:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        amount:
          type: string
          format: decimal
          x-go-type: decimal.Decimal
          x-go-type-import:
            path: github.com/shopspring/decimal
        quantity:
          type: integer
        tax_rate:
          type: string
          format: decimal
          x-go-type: decimal.Decimal
          x-go-type-import:
            path: github.com/shopspring/decimal
      required:
        - amount


    Matter:
      type: object
      properties:
        external_id:
          type: string
        external_reference:
          type: string
        description:
          type: string
        type:
          type: string


    Debtor:
      type: object
      properties:
        external_id:
          type: string
        name:
          type: string
        email:
          type: string
        contact_number:
          type: string

    Currency:
      type: string
      enum:
        - AUD
        - USD

    AccountType:
      type: string
      enum:
        - Office
        - Trust

    ArtifactType:
      type: string
      enum:
        - Unknown
        - Invoice
        - AnticipatedTrustDeposit
        - MatterStatement
        - ClientStatement
        - PaymentLink
        - PaymentRequest
        - Subscription
        - Fee
        - Refund

    PaymentMethod:
      type: string
      enum:
        - Card
        - Debit
        - BankTransfer
        - BNPL10Week
        - BNPL6Month
        - BNPL12Month


    SurchargeChoice:
      type: string
      enum:
        - Customer
        - Merchant

    WebhookList:
      type: object
      properties:
        webhooks:
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
      required:
        - webhooks

    Webhook:
      type: object
      properties:
        webhook_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
            name: uuid
        party_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
            name: uuid
        name:
          type: string
        description:
          type: string
        url:
          type: string
        status:
          $ref: "#/components/schemas/WebhookStatus"
        events:
          type: array
          example: ["artifact.invoice.created", "payment.card.successful", "payout.disbursed"]
          items:
            type: string
        authentication:
          $ref: "#/components/schemas/WebhookApiAuthentication"
      required:
        - party_id
        - name
        - description
        - url
        - status
        - events
        - authentication


    WebhookResponse:
      type: object
      properties:
        webhook:
          $ref: "#/components/schemas/Webhook"
      required:
        - webhook

    WebhookApiAuthentication:
      type: object
      properties:
        type:
          type: string
          example: bearer_token, basic_auth
        add_position:
          type: string
          example: header, body
        data:
          description: Either "username" and "password" or "token" keys
          example: ' "username": "me@blah.com",  "password": "password:123" '
          additionalProperties:
            type: string
      required:
        - type
        - data

    WebhookStatus:
      type: string
      enum:
        - Unknown
        - Enabled
        - Disabled

    WebhookSendStatus:
      type: string
      description: Webhook send status
      enum:
        - sent
        - failed

    EventTopics:
      type: object
      properties:
        eventTopics:
          type: array
          items:
            type: string
      required:
        - eventTopics

    ErrorResponse:
      type: object
      properties:
        title:
          type: string
        detail:
          type: string
        type:
          type: string


    Event:
      type: object
      properties:
        webhook_event_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
            name: uuid
        externalId:
          type: string
          description: The id of the firm the webhook was related to.
        topic:
          type: string
          description: The topic of the event.
        status:
          $ref: "#/components/schemas/WebhookSendStatus"
        payload:
          type: object
          additionalProperties: true
          description: The webhooks payload and metadata about how and when the data was sent.
        sent_at:
          type: string
          format: date-time
          description: The timestamp the webhook send was attempted.
      required:
        - webhook_event_id
        - topic
        - sent_at
        - status
        - payload
        - externalId

    Events:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: "#/components/schemas/Event"
        filters:
          $ref: "#/components/schemas/EventFilters"
      required:
        - events

    EventFilters:
      type: object
      properties:
        status:
          type: string
          example: sent, failed, all
        topic:
          type: string
          example: none, {userSupplied}
        since:
          type: string
          format: date-time
      required:
        - status
        - topic
        - since
